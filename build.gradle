defaultTasks 'build'

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 10
    targetCompatibility = 10
    repositories {
        jcenter()
    }
    afterEvaluate {
        compileJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                ]
                classpath = files()
            }
        }
        compileTestJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath,
                        '--add-modules', 'junit',
                        '--add-reads', "$moduleName=junit",
                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
                ]
                classpath = files()
            }
        }
        // this apparently enables the module system things for unit tests runtime
        // not really needed unless playing around with reflection?
//        test {
//            inputs.property("moduleName", moduleName)
//            doFirst {
//                jvmArgs = [
//                        '--module-path', classpath.asPath,
//                        '--add-modules', 'ALL-MODULE-PATH',
//                        '--add-reads', "$moduleName=junit",
//                        '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
//                ]
//                classpath = files()
//            }
//        }
    }
}
